
# certbot wants to manage some stuff
# https://www.nginx.com/blog/using-free-ssltls-certificates-from-lets-encrypt-with-nginx/

limit_req_zone $binary_remote_addr zone=grafana_rate_limit:10m rate=100r/s;

server {

  listen 80 default_server;
  listen [::]:80 default_server;

  # TODO is this needed?
  # server_name monolithgrafaws.caterboo.com;

  root /var/www/html;
  index index.html index.htm index.nginx-debian.html;

  access_log /var/log/nginx/reverse-access.log;
  error_log /var/log/nginx/reverse-error.log;

  location / {
              limit_req zone=grafana_rate_limit burst=5 nodelay;
              proxy_pass http://127.0.0.1:3000;
  }
}


server {

  # TODO is this needed?
  # server_name monolithgrafaws.caterboo.com;

  root /var/www/html;
  index index.html index.htm index.nginx-debian.html;

  access_log /var/log/nginx/reverse-access.log;
  error_log /var/log/nginx/reverse-error.log;

  location / {
              limit_req zone=grafana_rate_limit burst=5 nodelay;
              proxy_pass http://127.0.0.1:3000;
  }

    server_name monolithgrafaws.caterboo.com; # managed by Certbot

    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/monolithgrafaws.caterboo.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/monolithgrafaws.caterboo.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {
    if ($host = monolithgrafaws.caterboo.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot



  listen 80 ;
  listen [::]:80 ;
    server_name monolithgrafaws.caterboo.com;
    return 404; # managed by Certbot


}