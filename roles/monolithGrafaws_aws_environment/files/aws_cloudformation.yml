---

AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Low availability, but low cost deployment.

Parameters:
  EnvironmentName:
    Description: An environment name that is prefixed to resource names and uses as the subdomain
    Type: String
  DomainName:
    Description: Domain name for route 53
    Type: String
    Default: caterboo.com
  HomeIPAddress:
    Description: Home IP Address (CIDR notation)
    Type: String
  KeyName:
    Description: Name of ssh key for EC2 instance
    Type: String
    Default: id_rsa

Resources:
  MonolithGrafawsSubdomain:
    Type: AWS::Route53::RecordSet
    Properties:
      Comment: DNS subdomain for !Sub ${EnvironmentName}
      HostedZoneId: Z1NMCCNSR26DWJ
      Name: !Join
        - '.'
        - - !Sub ${EnvironmentName}
          - !Sub ${DomainName}
      ResourceRecords:
      - !Ref EIP
      TTL: '300'
      Type: A
  EIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: standard
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - !Sub ${EnvironmentName}
              - EIP
  EC2:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: t2.micro
      # Ubuntu 20.04 HVM x88 64bit us-west-2
      ImageId: ami-056cb9ae6e2df09e8
      SecurityGroupIds:
        - !Ref SecurityGroup
      KeyName: !Ref KeyName
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - !Sub ${EnvironmentName}
              - EC2
  EIPAssociation:
    Type: AWS::EC2::EIPAssociation
    Properties: 
      AllocationId: !GetAtt EIP.AllocationId
      InstanceId: !Ref EC2
  SecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Allow general access on 443 and specific addresses for admin
      GroupName: !Sub ${EnvironmentName}
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - !Sub ${EnvironmentName}
              - sg
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3000
          ToPort: 3000
          CidrIp: !Ref HomeIPAddress
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: !Ref HomeIPAddress
        - IpProtocol: tcp
          FromPort: '5432'
          ToPort: '5432'
          CidrIp: !Ref HomeIPAddress
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 0.0.0.0/0
  # Security Group Ingress needs to be separate from security group in order to add self
  SGIngressSelf:
    Type: AWS::EC2::SecurityGroupIngress
    DependsOn: SecurityGroup
    Properties:
      GroupName: !Sub ${EnvironmentName}
      IpProtocol: tcp
      FromPort: 0
      ToPort: 65535
      SourceSecurityGroupId: !GetAtt SecurityGroup.GroupId
